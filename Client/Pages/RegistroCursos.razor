@page "/registroCurso"
@using BlazorAcademico.Shared
@inject HttpClient http
@using Blazored.Typeahead
@inject HttpClient http
@inject IRepositorio repositorio
@inject NavigationManager navigationManager
<div>
    <div class="alert @tipoMsg">
        @msg
    </div>
    <form @onsubmit="GuardarDatos">
        <label>Estudiantes</label>
        <BlazoredTypeahead SearchMethod="buscarEstudiante" @bind-Value="EstudianteSelected" EnableDropDown="true" TItem="EstudiantesCls" TValue="EstudiantesCls">
            <SelectedTemplate>
                @context.IdEstudiante - @context.Nombre
            </SelectedTemplate>
            <ResultTemplate>
                @context.IdEstudiante - @context.Nombre
            </ResultTemplate>
        </BlazoredTypeahead>

        <div class="form-group">
            <label>Docente</label>
            <select class="form-control" @bind-value="cbxMaestro"
                    @bind-value:event="oninput"
                    @onchange="BuscarCursoPorMaestro">
                <option value="">--Seleccione--</option>
                @if (LstMaestros != null)
                {
                    @foreach (MaestrosCls m in LstMaestros)
                    {
                        <option value="@m.MaestroId">@m.Nombre</option>
                    }
                }
            </select>
        </div>
        <div>Cursos</div>
        <div class="form-group">
            <select class="form-control">
                <option value="">--Seleccione--</option>
                @if (LstCursos != null)
                {
                    @foreach (CursoCls c in LstCursos)
                    {
                        <option value="@c.CursoId">@c.NombreCurso</option>
                    }
                }
            </select>
        </div>


        <BlazoredTypeahead MaximumSuggestions="2" SearchMethod="buscarCursos" @bind-Value="CursoSelected" EnableDropDown="true" TItem="CursoCls" TValue="CursoCls">
            <SelectedTemplate>
                @context.NombreCurso - Cupos: @context.Cupo
            </SelectedTemplate>
            <ResultTemplate>
                @context.NombreCurso - Cupos: @context.Cupo
            </ResultTemplate>
        </BlazoredTypeahead>


        <div class="form-group">
            <input type="submit" class="m-3 btn btn-primary" value="Agregar" />
        </div>

        @code{
            string[] cabecerasTabla = { "Codigo", "Nombre Curso", "Maestro", "Opciones" };
        }
        <div class="form-group">
            <Lista cabeceras=cabecerasTabla
                   lista=DetalleRegistro
                   eventEliminar="EliminarDatos"
                   eventBusqueda="BusquedaGrado"
                   rtaAgregar="agregarGrado"
                   rtaEditar="editarGrado"
                   MostrarEspera="false" />
        </div>

    </form>
</div>
@code{
    protected override async Task OnInitializedAsync()
    {
        LstMaestros = await http.GetFromJsonAsync<MaestrosCls[]>("api/Maestro/GetMaestros");
        LstEstudiantes = await http.GetFromJsonAsync<EstudiantesCls[]>("api/Estudiante/GetEstudiantes");
    }
    public async Task BusquedaGrado(string data)
    {
        tipoMsg = ""; msg = "";
        DetalleRegistro = await http.GetFromJsonAsync<MostrarCursos[]>("api/RegistroAcademico/Filtrar/" + data);

    }

    public async Task EliminarDatos(string data)
    {
        int respuesta = await http.GetFromJsonAsync<int>("api/Grado/EliminarGrado/" + data);
        if (respuesta == 1)
        {
            data = "";
            //listaGrados = await http.GetFromJsonAsync<GradoCls[]>("api/RegistroAcademico/Filtrar/" + data);
            tipoMsg = "alert alert-primary";
            msg = "Grado eliminado con exito";
        }
        else
        {
            tipoMsg = "alert alert-danger";
            msg = "Accion no pudo procesarse, es posible que el Grado ya cuente con registros";
        }
    }
}
